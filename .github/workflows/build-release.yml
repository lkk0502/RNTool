name: Build and Release

on:
  push:
    tags:
      - "v*" # 當推送以 'v' 開頭的標籤時觸發，例如 v1.0.0

jobs:
  build-and-release:
    runs-on: windows-latest # 使用 Windows，因為 PyInstaller 在 Windows 上運行更符合你的 .bat 環境
    steps:
      # 簽出倉庫程式碼
      - name: Checkout code
        uses: actions/checkout@v3

      # 設置 Python 環境
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8" # 使用 Python 3.8

      # 安裝依賴
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pandas requests openpyxl

      # 執行 PyInstaller 打包
      - name: Build with PyInstaller
        run: |
          python -m PyInstaller --distpath ./out --onefile .\compare.py
          python -m PyInstaller --distpath ./out --onefile .\parsergerrit.py

      # 複製檔案（模擬 ReleaseTool.bat 的行為）
      - name: Copy files
        run: |
          mkdir .\out\sample\out -ErrorAction SilentlyContinue
          copy .\README.md .\out /Y
        shell: cmd # 使用 Windows CMD 語法

      # 提取倉庫名稱
      - name: Extract repository name
        run: |
          echo "REPO_NAME=$(basename ${{ github.repository }})" >> $GITHUB_ENV
        shell: bash

      # 建立 ZIP 檔案（使用環境變數）
      - name: Create ZIP file
        run: |
          powershell -Command "Compress-Archive -Path .\out\* -DestinationPath $env:REPO_NAME-${{ github.ref_name }}.zip"
        # 使用環境變數 REPO_NAME，例如 RNTool-v1.1.2.zip

      # 建立 Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      # 上傳 ZIP 檔案到 Release（使用環境變數）
      - name: Upload ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.REPO_NAME }}-${{ github.ref_name }}.zip
          asset_name: ${{ env.REPO_NAME }}-${{ github.ref_name }}.zip
          asset_content_type: application/zip
